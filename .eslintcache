[{"/Users/joshseckman/Documents/projects/shop/shop_client/src/index.js":"1","/Users/joshseckman/Documents/projects/shop/shop_client/src/App.js":"2","/Users/joshseckman/Documents/projects/shop/shop_client/src/reportWebVitals.js":"3","/Users/joshseckman/Documents/projects/shop/shop_client/src/components/Nav.js":"4","/Users/joshseckman/Documents/projects/shop/shop_client/src/pages/Cart.js":"5","/Users/joshseckman/Documents/projects/shop/shop_client/src/components/Header.js":"6","/Users/joshseckman/Documents/projects/shop/shop_client/src/components/CheckOut.js":"7","/Users/joshseckman/Documents/projects/shop/shop_client/src/components/Form.js":"8","/Users/joshseckman/Documents/projects/shop/shop_client/src/pages/Login.js":"9","/Users/joshseckman/Documents/projects/shop/shop_client/src/pages/Show.js":"10","/Users/joshseckman/Documents/projects/shop/shop_client/src/pages/Signup.js":"11","/Users/joshseckman/Documents/projects/shop/shop_client/src/components/OrderItem.js":"12","/Users/joshseckman/Documents/projects/shop/shop_client/src/components/Product.js":"13","/Users/joshseckman/Documents/projects/shop/shop_client/src/pages/Products.js":"14","/Users/joshseckman/Documents/projects/shop/shop_client/src/components/Footer.js":"15","/Users/joshseckman/Documents/projects/shop/shop_client/src/pages/OrderHistory.js":"16","/Users/joshseckman/Documents/projects/shop/shop_client/src/pages/OrderConfirmation.js":"17"},{"size":589,"mtime":1609262688533,"results":"18","hashOfConfig":"19"},{"size":2134,"mtime":1609262627632,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1608482165024,"results":"21","hashOfConfig":"19"},{"size":5257,"mtime":1609195198325,"results":"22","hashOfConfig":"19"},{"size":1681,"mtime":1609123529908,"results":"23","hashOfConfig":"19"},{"size":202,"mtime":1608588245917,"results":"24","hashOfConfig":"19"},{"size":810,"mtime":1609174117268,"results":"25","hashOfConfig":"19"},{"size":3305,"mtime":1609193735220,"results":"26","hashOfConfig":"19"},{"size":707,"mtime":1608609095513,"results":"27","hashOfConfig":"19"},{"size":3013,"mtime":1609265465610,"results":"28","hashOfConfig":"19"},{"size":543,"mtime":1608609012231,"results":"29","hashOfConfig":"19"},{"size":2003,"mtime":1609269036818,"results":"30","hashOfConfig":"19"},{"size":5069,"mtime":1609212851309,"results":"31","hashOfConfig":"19"},{"size":881,"mtime":1609212596234,"results":"32","hashOfConfig":"19"},{"size":1331,"mtime":1609266024652,"results":"33","hashOfConfig":"19"},{"size":3326,"mtime":1609268679047,"results":"34","hashOfConfig":"19"},{"size":594,"mtime":1609174056883,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bqqqu3",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/joshseckman/Documents/projects/shop/shop_client/src/index.js",[],"/Users/joshseckman/Documents/projects/shop/shop_client/src/App.js",[],"/Users/joshseckman/Documents/projects/shop/shop_client/src/reportWebVitals.js",[],["76","77"],"/Users/joshseckman/Documents/projects/shop/shop_client/src/components/Nav.js",["78","79","80","81"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AppContext } from \"../App\";\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport { blue, yellow } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles(() => ({\n  typographyStyles: {\n    flex: 1,\n  },\n  appBar: {\n    padding: 15,\n    marginBottom: 15,\n  },\n}));\n\nconst Nav = (props) => {\n  const { appState, setAppState } = React.useContext(AppContext);\n  const { inCart, token } = appState;\n  const classes = useStyles();\n\n  return (\n    <div>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <Typography className={classes.typographyStyles}>\n            <Link to=\"/\">\n              <img src=\"/logo.png\" style={{ height: \"7em\" }} />\n            </Link>\n          </Typography>\n          <Typography className={classes.typographyStyles}>\n            <Link to=\"/\">Products</Link>\n          </Typography>\n          <Typography className={classes.typographyStyles}>\n            {token ? (\n              <Link to=\"/orderhistory\" class=\"nav-link\">\n                Order History\n              </Link>\n            ) : null}\n          </Typography>\n          <Typography className={classes.typographyStyles}>\n            {token ? (\n              <Link\n                to=\"/\"\n                onClick={() =>\n                  setAppState({\n                    ...appState,\n                    token: null,\n                    userId: null,\n                    inCart: false,\n                  })\n                }>\n                Log Out\n              </Link>\n            ) : null}\n          </Typography>\n          <Typography className={classes.typographyStyles}>\n            {!token ? (\n              <>\n                <Link to=\"/login\" class=\"nav-link\">\n                  Login\n                </Link>\n\n                <Link to=\"/signup\" class=\"nav-link\">\n                  Signup\n                </Link>\n              </>\n            ) : null}\n          </Typography>\n          <IconButton>\n            <Link to=\"/login\">\n              {token ? (\n                <Link to=\"/cart\">\n                  <ShoppingCartIcon fontSize=\"large\" />\n                </Link>\n              ) : null}\n            </Link>\n          </IconButton>\n\n          <IconButton>\n            <Link to=\"/login\">\n              <AccountCircleIcon fontSize=\"large\" />\n            </Link>\n          </IconButton>\n          {/* <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <Link to=\"/\" className=\"navbar-brand\">\n            <img src=\"/logo.png\" style={{ height: \"7em\" }} />\n          </Link>\n          <button\n            class=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav mr-auto\">\n              <li class=\"nav-item active\">\n                <Link to=\"/\" class=\"nav-link\">\n                  Home\n                </Link>\n              </li>\n              <li class=\"nav-item\">\n                <Link to=\"/\" class=\"nav-link\">\n                  Items\n                </Link>\n              </li>\n\n              {token ? (\n                <li class=\"nav-item\">\n                  <Link to=\"/orderhistory\" class=\"nav-link\">\n                    Order History\n                  </Link>\n                </li>\n              ) : null}\n\n              {token ? (\n                <Link\n                  to=\"/\"\n                  onClick={() =>\n                    setAppState({\n                      ...appState,\n                      token: null,\n                      userId: null,\n                      inCart: false,\n                    })\n                  }>\n                  Log Out\n                </Link>\n              ) : null}\n              {!token ? (\n                <>\n                  <li class=\"nav-item\">\n                    <Link to=\"/login\" class=\"nav-link\">\n                      Login\n                    </Link>\n                  </li>\n                  <li class=\"nav-item\">\n                    <Link to=\"/signup\" class=\"nav-link\">\n                      Signup\n                    </Link>\n                  </li>{\" \"}\n                </>\n              ) : null}\n            </ul>\n            {token ? (\n              <div class=\"form-inline my-2 my-lg-0\">\n                <Link to=\"/cart\" class=\"nav-link\">\n                  <i class=\"fas fa-shopping-cart\"></i>\n                  {inCart ? (\n                    <div>\n                      <p>!</p>\n                    </div>\n                  ) : null}\n                </Link>\n              </div>\n            ) : null}\n          </div>\n        </nav> */}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Nav;\n","/Users/joshseckman/Documents/projects/shop/shop_client/src/pages/Cart.js",["82"],"import React from \"react\";\nimport { AppContext } from \"../App\";\nimport OrderItem from \"../components/OrderItem\";\nimport CheckOut from \"../components/CheckOut\";\n\nconst Cart = (props) => {\n  const { appState, setAppState } = React.useContext(AppContext);\n  const { url, orderId } = appState;\n  const [order, setOrder] = React.useState(null);\n\n  const getOrder = async () => {\n    if (orderId) {\n      const response = await fetch(`${url}/orders/${orderId}`);\n      const data = await response.json();\n      await setOrder(data);\n    }\n  };\n\n  const deleteItem = async (id) => {\n    await fetch(`${url}/order_items/${id}`, {\n      method: \"DELETE\",\n    });\n  };\n\n  const deleteOrder = async (id) => {\n    await fetch(`${url}/orders/${id}`, {\n      method: \"DELETE\",\n    });\n    await setOrder(null);\n    await setAppState({\n      ...appState,\n      orderId: null,\n      inCart: false,\n    });\n  };\n\n  const handleDelete = (productId, orderId) => {\n    if (order.order_items.length === 1) {\n      deleteOrder(orderId);\n    } else {\n      deleteItem(productId);\n      getOrder();\n    }\n  };\n\n  React.useEffect(() => {\n    getOrder();\n  }, []);\n\n  const loaded = () => {\n    console.log(orderId);\n    return (\n      <div>\n        <div>\n          {order.order_items.map((product) => {\n            return (\n              <OrderItem\n                product={product}\n                handleDelete={handleDelete}\n                key={product.id}\n              />\n            );\n          })}\n        </div>\n        <CheckOut products={order.order_items} orderId={orderId} />\n      </div>\n    );\n  };\n\n  return order !== null ? loaded() : <h1>Your Cart is empty</h1>;\n};\n\nexport default Cart;\n","/Users/joshseckman/Documents/projects/shop/shop_client/src/components/Header.js",[],"/Users/joshseckman/Documents/projects/shop/shop_client/src/components/CheckOut.js",["83","84","85"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AppContext } from \"../App\";\n\nconst CheckOut = (props) => {\n  const { appState, setAppState } = React.useContext(AppContext);\n  const { products, orderId } = props;\n  let cartPrices = [];\n\n  products.map((product) => {\n    cartPrices.push(product.price);\n  });\n\n  const orderTotal = cartPrices.reduce(\n    (accumulator, currentValue) =>\n      parseFloat(accumulator) + parseFloat(currentValue)\n  );\n\n  return (\n    <div>\n      <h1>Your Cart</h1>\n      <hr />\n      <h3>Order Number: {orderId}</h3>\n\n      <hr />\n      <h1>Total</h1>\n      <h2>${parseFloat(orderTotal).toFixed(2)}</h2>\n      <Link to=\"/orderconfirmation\" orderId={orderId}>\n        <button>Check Out</button>\n      </Link>\n    </div>\n  );\n};\n\nexport default CheckOut;\n","/Users/joshseckman/Documents/projects/shop/shop_client/src/components/Form.js",[],"/Users/joshseckman/Documents/projects/shop/shop_client/src/pages/Login.js",[],"/Users/joshseckman/Documents/projects/shop/shop_client/src/pages/Show.js",[],"/Users/joshseckman/Documents/projects/shop/shop_client/src/pages/Signup.js",[],"/Users/joshseckman/Documents/projects/shop/shop_client/src/components/OrderItem.js",["86"],"/Users/joshseckman/Documents/projects/shop/shop_client/src/components/Product.js",["87"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AppContext } from \"../App\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\n\nconst Product = (props) => {\n  const { appState, setAppState } = React.useContext(AppContext);\n  const { url, inCart, orderId, userId, token } = appState;\n  const { product } = props;\n  const handleClick = (product) => {\n    setAppState({ ...appState, product: product });\n  };\n\n  const isUserLoggedIn = () => {\n    if (userId && token) {\n      console.log(userId);\n      createOrder(product);\n    } else {\n      props.history.push(\"/login\");\n    }\n  };\n\n  const createOrder = async (product) => {\n    console.log(userId);\n    if (!inCart) {\n      const response = await fetch(`${url}/orders`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/JSON\",\n          Authorization: `bearer ${token}`,\n        },\n        body: JSON.stringify({ qty: 1, user_id: userId }),\n      });\n      const data = await response.json();\n      await createOrderItem(data.id, product);\n      await setAppState({\n        ...appState,\n        orderId: data.id,\n        inCart: true,\n      });\n    } else {\n      createOrderItem(orderId, product);\n    }\n  };\n\n  const createOrderItem = async (id, product) => {\n    const orderItem = { ...product, order_id: id };\n    await fetch(`${url}/order_items`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/JSON\",\n        Authorization: `bearer ${token}`,\n      },\n      body: JSON.stringify(orderItem),\n    });\n  };\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      maxWidth: 345,\n      height: \"auto\",\n    },\n    media: {\n      height: 415,\n      paddingTop: \"56.25%\", // 16:9\n    },\n    expand: {\n      transform: \"rotate(0deg)\",\n      marginLeft: \"auto\",\n      transition: theme.transitions.create(\"transform\", {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: \"rotate(180deg)\",\n    },\n  }));\n\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={<Avatar src=\"/logo.png\" className={classes.avatar} />}\n        title={product.name}\n        subheader={product.price}\n      />\n      <Link\n        to=\"/show\"\n        onClick={() => {\n          handleClick(product);\n        }}>\n        <CardMedia\n          className={classes.media}\n          image={product.img}\n          title=\"Product\"\n        />\n      </Link>\n      <CardContent>\n        {/* <Typography\n          variant=\"headline\"\n          color=\"textSecondary\"\n          component=\"p\"></Typography> */}\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          <AddShoppingCartIcon\n            fontSize=\"large\"\n            onClick={() => {\n              userId && token ? createOrder(product) : <Link to=\"/login\" />;\n            }}\n          />\n        </IconButton>\n\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\">\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>{product.description}</Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n    // <div>\n    //   <div className=\"card\" style={{ width: \"18rem\" }}>\n    //     <Link\n    //       to=\"/show\"\n    //       onClick={() => {\n    //         handleClick(product);\n    //       }}>\n    //       <img src={product.img} class=\"card-img-top\" alt={product.name} />\n    //     </Link>\n\n    //     <div className=\"card-body\">\n    //       <h5 className=\"card-title\">{product.name}</h5>\n    //       <p className=\"card-text\">{product.price}</p>\n    //       <Button\n    //         variant=\"contained\"\n    //         size=\"large\"\n    //         color=\"primary\"\n    //         onClick={() => {\n    //           userId && token ? createOrder(product) : <Link to=\"/login\" />;\n    //         }}>\n    //         <i class=\"fas fa-cart-plus\"></i>\n    //       </Button>\n    //     </div>\n    //   </div>\n    // </div>\n  );\n};\n\nexport default Product;\n","/Users/joshseckman/Documents/projects/shop/shop_client/src/pages/Products.js",["88"],"import React from \"react\";\nimport { AppContext } from \"../App\";\nimport Product from \"../components/Product\";\nimport { Grid } from \"@material-ui/core\";\n\nconst Items = (props) => {\n  const { appState } = React.useContext(AppContext);\n  const { url } = appState;\n  const [products, setProducts] = React.useState([]);\n\n  const getProducts = async () => {\n    const response = await fetch(`${url}/products`);\n    const data = await response.json();\n    setProducts(data);\n  };\n\n  React.useEffect(() => {\n    getProducts();\n  }, []);\n\n  const loaded = () => {\n    return (\n      <Grid container spacing={2}>\n        {products.map((product) => (\n          <Grid item xs={12} sm={4}>\n            <Product product={product} key={product.id} />\n          </Grid>\n        ))}\n      </Grid>\n    );\n  };\n\n  return products.length > 0 ? loaded() : <h3>Loading...</h3>;\n};\n\nexport default Items;\n","/Users/joshseckman/Documents/projects/shop/shop_client/src/components/Footer.js",[],"/Users/joshseckman/Documents/projects/shop/shop_client/src/pages/OrderHistory.js",["89","90","91"],"/Users/joshseckman/Documents/projects/shop/shop_client/src/pages/OrderConfirmation.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":9,"column":10,"nodeType":"98","messageId":"99","endLine":9,"endColumn":14},{"ruleId":"96","severity":1,"message":"100","line":9,"column":16,"nodeType":"98","messageId":"99","endLine":9,"endColumn":22},{"ruleId":"96","severity":1,"message":"101","line":23,"column":11,"nodeType":"98","messageId":"99","endLine":23,"endColumn":17},{"ruleId":"102","severity":1,"message":"103","line":32,"column":15,"nodeType":"104","endLine":32,"endColumn":64},{"ruleId":"105","severity":1,"message":"106","line":48,"column":6,"nodeType":"107","endLine":48,"endColumn":8,"suggestions":"108"},{"ruleId":"96","severity":1,"message":"109","line":6,"column":11,"nodeType":"98","messageId":"99","endLine":6,"endColumn":19},{"ruleId":"96","severity":1,"message":"110","line":6,"column":21,"nodeType":"98","messageId":"99","endLine":6,"endColumn":32},{"ruleId":"111","severity":1,"message":"112","line":10,"column":26,"nodeType":"113","messageId":"114","endLine":10,"endColumn":28},{"ruleId":"96","severity":1,"message":"115","line":42,"column":9,"nodeType":"98","messageId":"99","endLine":42,"endColumn":26},{"ruleId":"96","severity":1,"message":"116","line":26,"column":9,"nodeType":"98","messageId":"99","endLine":26,"endColumn":23},{"ruleId":"105","severity":1,"message":"117","line":19,"column":6,"nodeType":"107","endLine":19,"endColumn":8,"suggestions":"118"},{"ruleId":"105","severity":1,"message":"119","line":40,"column":6,"nodeType":"107","endLine":40,"endColumn":8,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":58,"column":17,"nodeType":"123","endLine":58,"endColumn":43},{"ruleId":"121","severity":1,"message":"122","line":74,"column":29,"nodeType":"123","endLine":74,"endColumn":55},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'blue' is defined but never used.","Identifier","unusedVar","'yellow' is defined but never used.","'inCart' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getOrder'. Either include it or remove the dependency array.","ArrayExpression",["126"],"'appState' is assigned a value but never used.","'setAppState' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'handleExpandClick' is assigned a value but never used.","'isUserLoggedIn' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.",["127"],"React Hook React.useEffect has a missing dependency: 'getOrders'. Either include it or remove the dependency array.",["128"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [getOrder]",{"range":"135","text":"136"},"Update the dependencies array to be: [getProducts]",{"range":"137","text":"138"},"Update the dependencies array to be: [getOrders]",{"range":"139","text":"140"},[1134,1136],"[getOrder]",[523,525],"[getProducts]",[1036,1038],"[getOrders]"]